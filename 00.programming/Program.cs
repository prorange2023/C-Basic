/* 
 * 이게 주석인건 알지
 */

// <주석 종류>
//  //      : 한줄 주석 : // 이후 텍스트를 주석으로 취급
//  /**/    : 범위 주석 : 시작(/*)에서 끝(*/)까지 텍스트를 주석으로 취급
//  ///     : 문서 주석 : 함수 또는 클래스 앞에서 /// 입력으로 자동완성 및 visual studio에서 정보표시기능


//using System; 네임스페이스 안의 기능을 아래 내용부턴 기본적으로 포함

using System;

namespace _00.programming
{
    /// <summary>
    /// 클래스 앞에도 ///로 자동완성 문서 주석
    /// </summary>
    /// 
    

    /************************************************************* 
     * 
    * 네임스페이스 (Namespace)
    * 기능이나 구분이 비슷한 기능들을 하나의 이름 아래 묶는 기능
    * 수많은 클래스 사용에 혼란이 적도록 용도/분야 별로 정리
    *************************************************************/

    //Iternal 은 나중에 배우자
    /*
     *클래스(Class)
     *
     *C#프로그램의 기본단위
     *데이터와 기능으로 구성
     */
    class Program
    {
        /// <summary>
        /// 내가 만든 기능이 이런 용도다
        /// </summary>
        /// <param name="args">여기엔 매개변수 작성이라</param>
        /// 


        /*
         *Main 함수
         *
         *프로그램의 처음 시작지점이 되는 함수
         *C#프로그램은 반드시 하나의 Main 함수를 포함해야 함
         *없으면 실행이 안되고, 여러개여도 안됨. 반드시 하나만 있어야함.
         *Main이 시작지점이다.
         */
        static void Main(string[] args)
        {
            // Console 이란?
            // 표준 입출력
            // 콘솔 : 컴퓨터와 사용자가 텍스트 형태로 소통하기 위한 수단
            // write : 콘솔에 출력하고 줄을 바꾸지 않음
            Console.WriteLine("<게임 타이틀>");
            //세줄 띠고 싶으면? 어칼꺼야? \n
            Console.WriteLine("메뉴선택"); // 콘솔에 출력하고 줄바꿈

            Console.Write("캐릭터의 이름을 입력하세요 :"); // 콘솔에 출력하고 줄 바꾸지 않음
            string name = Console.ReadLine(); // 콘솔을 통해 한줄 입력받기

            Console.Write("키를 입력하세요 : ");
            Console.ReadKey(); // 콘솔을 통해 한키 입력받기

            Console.WriteLine("입력하신 이름은 "+name+" 입니다.");
            //using 여러개는 사실상 못한단 말이잖아 아닌가?
            //
            //앞에서 using Network 선언을 하면 Console 앞에 Network.을 일일이 안쳐도 됨
            //system 은 기본 선언되있음

        }
    }
}
